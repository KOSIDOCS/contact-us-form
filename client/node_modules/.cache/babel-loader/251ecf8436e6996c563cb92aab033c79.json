{"ast":null,"code":"var _jsxFileName = \"/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/EmailInput.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { validate } from \"isemail\";\nimport TextInput from \"./TextInput\";\n\nconst EmailInput = props => {\n  // prevent passing type and validator props from this component to the rendered form field component\n  const {\n    type,\n    validator,\n    ...restProps\n  } = props; // validateEmail function using the validate() method of the isemail package\n\n  const validateEmail = (value, label) => {\n    // if (!validate(value, { minDomainAtoms: 2 }))\n    //   throw new Error(`${label} is invalid`);\n    if (value.length < 2) throw new Error(`${label} is invalid`);\n  }; // pass the validateEmail to the validator props\n\n\n  return /*#__PURE__*/React.createElement(TextInput, Object.assign({\n    type: \"email\",\n    validator: validateEmail\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }));\n};\n\nEmailInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  onStateChanged: PropTypes.func\n};\nexport default EmailInput;","map":{"version":3,"sources":["/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/EmailInput.jsx"],"names":["React","PropTypes","validate","TextInput","EmailInput","props","type","validator","restProps","validateEmail","value","label","length","Error","propTypes","string","isRequired","labelId","placeholder","required","bool","onStateChanged","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmB,OAAGC;AAAtB,MAAoCH,KAA1C,CAF4B,CAI5B;;AACA,QAAMI,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACtC;AACA;AACA,QAAID,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB,MAAM,IAAIC,KAAJ,CAAW,GAAEF,KAAM,aAAnB,CAAN;AACvB,GAJD,CAL4B,CAW5B;;;AACA,sBAAO,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,SAAS,EAAEF;AAAnC,KAAsDD,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAbD;;AAeAJ,UAAU,CAACU,SAAX,GAAuB;AACrBH,EAAAA,KAAK,EAAEV,SAAS,CAACc,MAAV,CAAiBC,UADH;AAErBC,EAAAA,OAAO,EAAEhB,SAAS,CAACc,MAAV,CAAiBC,UAFL;AAGrBE,EAAAA,WAAW,EAAEjB,SAAS,CAACc,MAAV,CAAiBC,UAHT;AAIrBG,EAAAA,QAAQ,EAAElB,SAAS,CAACmB,IAJC;AAKrBC,EAAAA,cAAc,EAAEpB,SAAS,CAACqB;AALL,CAAvB;AAQA,eAAelB,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { validate } from \"isemail\";\n\nimport TextInput from \"./TextInput\";\n\nconst EmailInput = (props) => {\n  // prevent passing type and validator props from this component to the rendered form field component\n  const { type, validator, ...restProps } = props;\n\n  // validateEmail function using the validate() method of the isemail package\n  const validateEmail = (value, label) => {\n    // if (!validate(value, { minDomainAtoms: 2 }))\n    //   throw new Error(`${label} is invalid`);\n    if (value.length < 2) throw new Error(`${label} is invalid`);\n  };\n\n  // pass the validateEmail to the validator props\n  return <TextInput type=\"email\" validator={validateEmail} {...restProps} />;\n};\n\nEmailInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  onStateChanged: PropTypes.func,\n};\n\nexport default EmailInput;\n"]},"metadata":{},"sourceType":"module"}