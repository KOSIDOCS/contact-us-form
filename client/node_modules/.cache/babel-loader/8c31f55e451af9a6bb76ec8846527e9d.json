{"ast":null,"code":"import _objectWithoutProperties from\"/home/kosidocs/Web Development/React-Development/contact-us-form/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import TextInput from\"./TextInput\";var MessageInput=function MessageInput(props){// prevent passing type and validator props from this component to the rendered form field component\nvar type=props.type,validator=props.validator,restProps=_objectWithoutProperties(props,[\"type\",\"validator\"]);// validateEmail function using the validate() method of the isemail package\nvar validateMessage=function validateMessage(value,label){if(value.length<2)throw new Error(\"\".concat(label,\" is invalid\"));};return/*#__PURE__*/React.createElement(TextInput,Object.assign({type:\"text\",validator:validateMessage,width:\"100%\"},restProps));};export default MessageInput;","map":{"version":3,"sources":["/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/MessageInput.jsx"],"names":["React","TextInput","MessageInput","props","type","validator","restProps","validateMessage","value","label","length","Error"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B;AAD8B,GAEtBC,CAAAA,IAFsB,CAEYD,KAFZ,CAEtBC,IAFsB,CAEhBC,SAFgB,CAEYF,KAFZ,CAEhBE,SAFgB,CAEFC,SAFE,0BAEYH,KAFZ,uBAI9B;AACA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAQC,KAAR,CAAkB,CACxC,GAAID,KAAK,CAACE,MAAN,CAAe,CAAnB,CAAsB,KAAM,IAAIC,CAAAA,KAAJ,WAAaF,KAAb,gBAAN,CACvB,CAFD,CAGA,mBACE,oBAAC,SAAD,gBACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAEF,eAFb,CAGE,KAAK,CAAC,MAHR,EAIMD,SAJN,EADF,CAQD,CAhBD,CA0BA,cAAeJ,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TextInput from \"./TextInput\";\n\nconst MessageInput = (props) => {\n  // prevent passing type and validator props from this component to the rendered form field component\n  const { type, validator, ...restProps } = props;\n\n  // validateEmail function using the validate() method of the isemail package\n  const validateMessage = (value, label) => {\n    if (value.length < 2) throw new Error(`${label} is invalid`);\n  };\n  return (\n    <TextInput\n      type=\"text\"\n      validator={validateMessage}\n      width=\"100%\"\n      {...restProps}\n    />\n  );\n};\n\nMessageInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  onStateChanged: PropTypes.func,\n};\n\nexport default MessageInput;\n"]},"metadata":{},"sourceType":"module"}