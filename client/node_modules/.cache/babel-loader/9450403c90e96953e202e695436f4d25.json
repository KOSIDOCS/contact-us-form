{"ast":null,"code":"import _objectWithoutProperties from\"/home/kosidocs/Web Development/React-Development/contact-us-form/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{validate}from\"isemail\";import TextInput from\"./TextInput\";var EmailInput=function EmailInput(props){// prevent passing type and validator props from this component to the rendered form field component\nvar type=props.type,validator=props.validator,restProps=_objectWithoutProperties(props,[\"type\",\"validator\"]);// validateEmail function using the validate() method of the isemail package\nvar validateEmail=function validateEmail(value,label){if(!validate(value,{minDomainAtoms:2}))throw new Error(\"\".concat(label,\" is invalid\"));};// pass the validateEmail to the validator props\nreturn/*#__PURE__*/React.createElement(TextInput,Object.assign({type:\"email\",validator:validateEmail},restProps));};export default EmailInput;","map":{"version":3,"sources":["/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/EmailInput.jsx"],"names":["React","validate","TextInput","EmailInput","props","type","validator","restProps","validateEmail","value","label","minDomainAtoms","Error"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,QAAT,KAAyB,SAAzB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC5B;AAD4B,GAEpBC,CAAAA,IAFoB,CAEcD,KAFd,CAEpBC,IAFoB,CAEdC,SAFc,CAEcF,KAFd,CAEdE,SAFc,CAEAC,SAFA,0BAEcH,KAFd,uBAI5B;AACA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAQC,KAAR,CAAkB,CACtC,GAAI,CAACT,QAAQ,CAACQ,KAAD,CAAQ,CAAEE,cAAc,CAAE,CAAlB,CAAR,CAAb,CACE,KAAM,IAAIC,CAAAA,KAAJ,WAAaF,KAAb,gBAAN,CACH,CAHD,CAKA;AACA,mBAAO,oBAAC,SAAD,gBAAW,IAAI,CAAC,OAAhB,CAAwB,SAAS,CAAEF,aAAnC,EAAsDD,SAAtD,EAAP,CACD,CAZD,CAsBA,cAAeJ,CAAAA,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { validate } from \"isemail\";\n\nimport TextInput from \"./TextInput\";\n\nconst EmailInput = (props) => {\n  // prevent passing type and validator props from this component to the rendered form field component\n  const { type, validator, ...restProps } = props;\n\n  // validateEmail function using the validate() method of the isemail package\n  const validateEmail = (value, label) => {\n    if (!validate(value, { minDomainAtoms: 2 }))\n      throw new Error(`${label} is invalid`);\n  };\n\n  // pass the validateEmail to the validator props\n  return <TextInput type=\"email\" validator={validateEmail} {...restProps} />;\n};\n\nEmailInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  onStateChanged: PropTypes.func,\n};\n\nexport default EmailInput;\n"]},"metadata":{},"sourceType":"module"}