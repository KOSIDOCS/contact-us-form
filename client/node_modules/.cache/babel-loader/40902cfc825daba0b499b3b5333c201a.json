{"ast":null,"code":"var _jsxFileName = \"/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/RightColumn.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextInput from \"./TextInput\";\n\nconst RightColumn = () => {\n  // initialize state to hold validity of form fields\n  const {\n    fieldState,\n    setFieldState\n  } = useState({\n    fullname: false,\n    email: false,\n    password: false\n  }); // higher-order function that returns a state change watch function\n  // sets the corresponding state property to true if the form field has no errors\n\n  const fieldStateChanged = field => state => setFieldState({\n    [field]: state.errors.length === 0\n  });\n\n  const firstNameChanged = fieldStateChanged(\"firstname\");\n\n  const validateFullname = (value, placeholder) => {\n    const regex = /^[a-z]{2,}(\\s[a-z]{2,})+$/i;\n    if (!regex.test(value)) throw new Error(placeholder + \" invalid\");\n  };\n\n  const {\n    fullname,\n    email,\n    password\n  } = fieldState;\n  const formValidated = fullname && email && password;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(TextInput, {\n    labelId: \"firstname\",\n    label: \"First Name\",\n    placeholder: \"John Doe\",\n    type: \"text\",\n    validator: validateFullname,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\nexport default RightColumn;","map":{"version":3,"sources":["/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/RightColumn.jsx"],"names":["React","useState","styled","TextInput","RightColumn","fieldState","setFieldState","fullname","email","password","fieldStateChanged","field","state","errors","length","firstNameChanged","validateFullname","value","placeholder","regex","test","Error","formValidated","Wrapper","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCL,QAAQ,CAAC;AAC7CM,IAAAA,QAAQ,EAAE,KADmC;AAE7CC,IAAAA,KAAK,EAAE,KAFsC;AAG7CC,IAAAA,QAAQ,EAAE;AAHmC,GAAD,CAA9C,CAFwB,CAQxB;AACA;;AACA,QAAMC,iBAAiB,GAAIC,KAAD,IAAYC,KAAD,IACnCN,aAAa,CAAC;AAAE,KAACK,KAAD,GAASC,KAAK,CAACC,MAAN,CAAaC,MAAb,KAAwB;AAAnC,GAAD,CADf;;AAGA,QAAMC,gBAAgB,GAAGL,iBAAiB,CAAC,WAAD,CAA1C;;AAEA,QAAMM,gBAAgB,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAC/C,UAAMC,KAAK,GAAG,4BAAd;AACA,QAAI,CAACA,KAAK,CAACC,IAAN,CAAWH,KAAX,CAAL,EAAwB,MAAM,IAAII,KAAJ,CAAUH,WAAW,GAAG,UAAxB,CAAN;AACzB,GAHD;;AAKA,QAAM;AAAEX,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAAgCJ,UAAtC;AACA,QAAMiB,aAAa,GAAGf,QAAQ,IAAIC,KAAZ,IAAqBC,QAA3C;AAEA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,YAFR;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,EAAEO,gBALb;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD,CApCD;;AAsCA,MAAMO,OAAO,GAAGrB,MAAM,CAACsB,GAAI;;CAA3B;AAIA,eAAepB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextInput from \"./TextInput\";\n\nconst RightColumn = () => {\n  // initialize state to hold validity of form fields\n  const { fieldState, setFieldState } = useState({\n    fullname: false,\n    email: false,\n    password: false,\n  });\n\n  // higher-order function that returns a state change watch function\n  // sets the corresponding state property to true if the form field has no errors\n  const fieldStateChanged = (field) => (state) =>\n    setFieldState({ [field]: state.errors.length === 0 });\n\n  const firstNameChanged = fieldStateChanged(\"firstname\");\n\n  const validateFullname = (value, placeholder) => {\n    const regex = /^[a-z]{2,}(\\s[a-z]{2,})+$/i;\n    if (!regex.test(value)) throw new Error(placeholder + \" invalid\");\n  };\n\n  const { fullname, email, password } = fieldState;\n  const formValidated = fullname && email && password;\n\n  return (\n    <Wrapper>\n      {\" \"}\n      <TextInput\n        labelId=\"firstname\"\n        label=\"First Name\"\n        placeholder=\"John Doe\"\n        type=\"text\"\n        validator={validateFullname}\n        required\n      />\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n`;\n\nexport default RightColumn;\n"]},"metadata":{},"sourceType":"module"}