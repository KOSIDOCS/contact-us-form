{"ast":null,"code":"var _jsxFileName = \"/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/RightColumn.jsx\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport TextInput from \"./TextInput\";\nimport EmailInput from \"./EmailInput\";\nimport PhoneInput from \"./PhoneInput\";\nimport RadioBtn from \"./RadioBtn\";\nimport MessageInput from \"./MessageInput\";\nimport Button from \"./Button\";\n\nconst RightColumn = () => {\n  // initialize state to hold validity of form fields\n  const [fieldState, setFieldState] = useState({\n    firstname: false,\n    lastname: false,\n    email: false,\n    phone: false,\n    message: false\n  });\n  const [fieldValue, setFieldValue] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\"\n  }); // console.log(fieldValue);\n  // result of our form submit\n\n  const [result, setResult] = useState(null); // keep our selected option\n\n  const [radioState, setRadioState] = useState({}); // update our selected option with the change\n\n  const onValueChange = event => setRadioState({\n    selectedOption: event.target.value\n  }); // handle our form submit\n\n\n  const formSubmit = event => {\n    event.preventDefault();\n    axios.post(\"/send\", { ...fieldValue\n    }).then(response => {\n      setResult(response.data);\n      setFieldValue({\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        phone: \"\",\n        message: \"\"\n      });\n      setFieldState({\n        firstname: false,\n        lastname: false,\n        email: false,\n        phone: false,\n        message: false\n      });\n    }).catch(() => {\n      setResult({\n        success: false,\n        message: \"Something went wrong. Try again later\"\n      });\n    });\n  }; // higher-order function that returns a state change watch function\n  // sets the corresponding state property to true if the form field has no errors\n\n\n  const fieldStateChanged = field => state => {\n    setFieldValue(prevValue => {\n      if (field === \"firstname\") {\n        return {\n          firstname: state.value,\n          lastname: prevValue.lastname,\n          email: prevValue.email,\n          phone: prevValue.phone,\n          message: prevValue.message\n        };\n      } else if (field === \"lastname\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: state.value,\n          email: prevValue.email,\n          phone: prevValue.phone,\n          message: prevValue.message\n        };\n      } else if (field === \"email\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: prevValue.lastname,\n          email: state.value,\n          phone: prevValue.phone,\n          message: prevValue.message\n        };\n      } else if (field === \"phone\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: prevValue.lastname,\n          email: prevValue.email,\n          phone: state.value,\n          message: prevValue.message\n        };\n      } else if (field === \"message\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: prevValue.lastname,\n          email: prevValue.email,\n          phone: prevValue.phone,\n          message: state.value\n        };\n      }\n    });\n    setFieldState({\n      [field]: state.errors.length === 0\n    });\n  };\n\n  const firstNameChanged = fieldStateChanged(\"firstname\");\n  const lastNameChanged = fieldStateChanged(\"lastname\");\n  const emailChanged = fieldStateChanged(\"email\");\n  const phoneChanged = fieldStateChanged(\"phone\");\n  const messageChanged = fieldStateChanged(\"message\");\n\n  const validateName = (value, label) => {\n    const regex = /^[a-z]{2,}$/i;\n    if (!regex.test(value)) throw new Error(`${label} is invalid`);\n  }; // const { fullname } = fieldState;\n  // const { firstname, lastname } = fieldValue;\n  // const formValidated = fullname && email && password;\n\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResultWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \" \", \"coming back homeuhwieuhfiuhwiuehiuhwiuheiuwhiuiwehiwuhfeiuhi weuhuiwheiuhiuhiuh\"));\n};\n\nconst Wrapper = styled.div`\n  width: 71%;\n  padding: 30px 60px 30px 60px;\n\n  @media (max-width: 768px) {\n    padding: 30px 3px 30px 3px;\n    width: 100%;\n  }\n`;\nconst ResultWrapper = styled.div`\n  width: 100%;\n  color: ${props => props.success ? \"#0ff40f\" : \"#960303\"};\n  height: 800px;\n`;\nconst FirstRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: space-between;\n    height: 180px;\n  }\n`;\nconst SecondRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 30px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: space-between;\n    height: 180px;\n  }\n`;\nconst ThirdRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 30px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: space-between;\n    height: 150px;\n  }\n`;\nconst Description = styled.div`\n  color: #0e054d;\n  font-weight: 700;\n  margin-top: 30px;\n`;\nconst FourthRow = styled.div`\n  width: 100%;\n  margin-top: 30px;\n`;\nconst LastRow = styled.div`\n  width: 100%;\n  margin-top: 40px;\n  text-align: right;\n\n  @media (max-width: 768px) {\n    text-align: left;\n  }\n`;\nexport default RightColumn;","map":{"version":3,"sources":["/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/RightColumn.jsx"],"names":["React","useState","styled","axios","TextInput","EmailInput","PhoneInput","RadioBtn","MessageInput","Button","RightColumn","fieldState","setFieldState","firstname","lastname","email","phone","message","fieldValue","setFieldValue","result","setResult","radioState","setRadioState","onValueChange","event","selectedOption","target","value","formSubmit","preventDefault","post","then","response","data","catch","success","fieldStateChanged","field","state","prevValue","errors","length","firstNameChanged","lastNameChanged","emailChanged","phoneChanged","messageChanged","validateName","label","regex","test","Error","Wrapper","div","ResultWrapper","props","FirstRow","SecondRow","ThirdRow","Description","FourthRow","LastRow"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nimport TextInput from \"./TextInput\";\nimport EmailInput from \"./EmailInput\";\nimport PhoneInput from \"./PhoneInput\";\nimport RadioBtn from \"./RadioBtn\";\nimport MessageInput from \"./MessageInput\";\nimport Button from \"./Button\";\n\nconst RightColumn = () => {\n  // initialize state to hold validity of form fields\n  const [fieldState, setFieldState] = useState({\n    firstname: false,\n    lastname: false,\n    email: false,\n    phone: false,\n    message: false,\n  });\n\n  const [fieldValue, setFieldValue] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\",\n  });\n\n  // console.log(fieldValue);\n\n  // result of our form submit\n  const [result, setResult] = useState(null);\n\n  // keep our selected option\n  const [radioState, setRadioState] = useState({});\n\n  // update our selected option with the change\n  const onValueChange = (event) =>\n    setRadioState({ selectedOption: event.target.value });\n\n  // handle our form submit\n  const formSubmit = (event) => {\n    event.preventDefault();\n    axios\n      .post(\"/send\", { ...fieldValue })\n      .then((response) => {\n        setResult(response.data);\n        setFieldValue({\n          firstname: \"\",\n          lastname: \"\",\n          email: \"\",\n          phone: \"\",\n          message: \"\",\n        });\n        setFieldState({\n          firstname: false,\n          lastname: false,\n          email: false,\n          phone: false,\n          message: false,\n        });\n      })\n      .catch(() => {\n        setResult({\n          success: false,\n          message: \"Something went wrong. Try again later\",\n        });\n      });\n  };\n\n  // higher-order function that returns a state change watch function\n  // sets the corresponding state property to true if the form field has no errors\n  const fieldStateChanged = (field) => (state) => {\n    setFieldValue((prevValue) => {\n      if (field === \"firstname\") {\n        return {\n          firstname: state.value,\n          lastname: prevValue.lastname,\n          email: prevValue.email,\n          phone: prevValue.phone,\n          message: prevValue.message,\n        };\n      } else if (field === \"lastname\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: state.value,\n          email: prevValue.email,\n          phone: prevValue.phone,\n          message: prevValue.message,\n        };\n      } else if (field === \"email\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: prevValue.lastname,\n          email: state.value,\n          phone: prevValue.phone,\n          message: prevValue.message,\n        };\n      } else if (field === \"phone\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: prevValue.lastname,\n          email: prevValue.email,\n          phone: state.value,\n          message: prevValue.message,\n        };\n      } else if (field === \"message\") {\n        return {\n          firstname: prevValue.firstname,\n          lastname: prevValue.lastname,\n          email: prevValue.email,\n          phone: prevValue.phone,\n          message: state.value,\n        };\n      }\n    });\n    setFieldState({ [field]: state.errors.length === 0 });\n  };\n\n  const firstNameChanged = fieldStateChanged(\"firstname\");\n  const lastNameChanged = fieldStateChanged(\"lastname\");\n  const emailChanged = fieldStateChanged(\"email\");\n  const phoneChanged = fieldStateChanged(\"phone\");\n  const messageChanged = fieldStateChanged(\"message\");\n\n  const validateName = (value, label) => {\n    const regex = /^[a-z]{2,}$/i;\n    if (!regex.test(value)) throw new Error(`${label} is invalid`);\n  };\n\n  // const { fullname } = fieldState;\n  // const { firstname, lastname } = fieldValue;\n  // const formValidated = fullname && email && password;\n\n  return (\n    <Wrapper>\n      <ResultWrapper>\n        {\" \"}\n        coming back homeuhwieuhfiuhwiuehiuhwiuheiuwhiuiwehiwuhfeiuhi\n        weuhuiwheiuhiuhiuh\n      </ResultWrapper>\n      {/* {result ? (\n        <ResultWrapper className={`${result.success ? \"success\" : \"error\"}`}>\n          {result.message}\n        </ResultWrapper>\n      ) : (\n        <form onSubmit={formSubmit}>\n          <FirstRow>\n            <TextInput\n              labelId=\"firstname\"\n              label=\"firstname\"\n              placeholder=\"John Doe\"\n              type=\"text\"\n              validator={validateName}\n              onStateChanged={firstNameChanged}\n              required\n            />\n            <TextInput\n              labelId=\"lastname\"\n              label=\"Last Name\"\n              placeholder=\"John Doe\"\n              type=\"text\"\n              validator={validateName}\n              onStateChanged={lastNameChanged}\n              required\n            />\n          </FirstRow>\n          <SecondRow>\n            <EmailInput\n              labelId=\"email\"\n              label=\"email\"\n              placeholder=\"mymail@gmail.com\"\n              onStateChanged={emailChanged}\n              required\n            />\n            <PhoneInput\n              labelId=\"phone\"\n              label=\"phone\"\n              placeholder=\"+971 50 267 5078\"\n              onStateChanged={phoneChanged}\n              required\n            />\n          </SecondRow>\n          <Description>\n            What type of website do you need? {radioState.selectedOption}\n          </Description>\n          <ThirdRow>\n            <RadioBtn\n              id=\"choice1\"\n              value=\"Web Design\"\n              label=\"Web Design\"\n              radioChecked={radioState.selectedOption === \"Web Design\"}\n              radioChanged={onValueChange}\n            />\n            <RadioBtn\n              id=\"choice2\"\n              value=\"Web Development\"\n              label=\"Web Development\"\n              radioChecked={radioState.selectedOption === \"Web Development\"}\n              radioChanged={onValueChange}\n            />\n            <RadioBtn\n              id=\"choice3\"\n              value=\"Logo Design\"\n              label=\"Logo Design\"\n              radioChecked={radioState.selectedOption === \"Logo Design\"}\n              radioChanged={onValueChange}\n            />\n            <RadioBtn\n              id=\"choice4\"\n              value=\"Other\"\n              label=\"Other\"\n              radioChecked={radioState.selectedOption === \"Other\"}\n              radioChanged={onValueChange}\n            />\n          </ThirdRow>\n          <FourthRow>\n            <MessageInput\n              label=\"message\"\n              labelId=\"message\"\n              placeholder=\"Write your message\"\n              onStateChanged={messageChanged}\n              required\n            />\n          </FourthRow>\n          <LastRow>\n            <Button type=\"submit\" />\n          </LastRow>\n        </form>\n      )} */}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 71%;\n  padding: 30px 60px 30px 60px;\n\n  @media (max-width: 768px) {\n    padding: 30px 3px 30px 3px;\n    width: 100%;\n  }\n`;\n\nconst ResultWrapper = styled.div`\n  width: 100%;\n  color: ${(props) => (props.success ? \"#0ff40f\" : \"#960303\")};\n  height: 800px;\n`;\nconst FirstRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: space-between;\n    height: 180px;\n  }\n`;\n\nconst SecondRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 30px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: space-between;\n    height: 180px;\n  }\n`;\n\nconst ThirdRow = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  margin-top: 30px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    justify-content: space-between;\n    height: 150px;\n  }\n`;\n\nconst Description = styled.div`\n  color: #0e054d;\n  font-weight: 700;\n  margin-top: 30px;\n`;\n\nconst FourthRow = styled.div`\n  width: 100%;\n  margin-top: 30px;\n`;\n\nconst LastRow = styled.div`\n  width: 100%;\n  margin-top: 40px;\n  text-align: right;\n\n  @media (max-width: 768px) {\n    text-align: left;\n  }\n`;\n\nexport default RightColumn;\n"]},"metadata":{},"sourceType":"module"}