{"ast":null,"code":"var _jsxFileName = \"/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/MessageInput.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport TextInput from \"./TextInput\";\n\nconst MessageInput = props => {\n  // prevent passing type and validator props from this component to the rendered form field component\n  const {\n    type,\n    validator,\n    ...restProps\n  } = props; // validateEmail function using the validate() method of the isemail package\n\n  const validateMessage = (value, label) => {\n    if (!value.length > 2) throw new Error(`${label} is invalid`);\n  };\n\n  return /*#__PURE__*/React.createElement(Message, Object.assign({\n    type: \"text\",\n    validator: validateMessage\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst Message = styled(TextInput)`\n  width: 100%;\n`;\nMessageInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  onStateChanged: PropTypes.func\n};\nexport default MessageInput;","map":{"version":3,"sources":["/home/kosidocs/Web Development/React-Development/contact-us-form/src/component/ContactBody/Right-column/MessageInput.jsx"],"names":["React","styled","PropTypes","TextInput","MessageInput","props","type","validator","restProps","validateMessage","value","label","length","Error","Message","propTypes","string","isRequired","labelId","placeholder","required","bool","onStateChanged","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmB,OAAGC;AAAtB,MAAoCH,KAA1C,CAF8B,CAI9B;;AACA,QAAMI,eAAe,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACxC,QAAI,CAACD,KAAK,CAACE,MAAP,GAAgB,CAApB,EAAuB,MAAM,IAAIC,KAAJ,CAAW,GAAEF,KAAM,aAAnB,CAAN;AACxB,GAFD;;AAGA,sBAAO,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAC,MAAd;AAAqB,IAAA,SAAS,EAAEF;AAAhC,KAAqDD,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CATD;;AAWA,MAAMM,OAAO,GAAGb,MAAM,CAACE,SAAD,CAAY;;CAAlC;AAIAC,YAAY,CAACW,SAAb,GAAyB;AACvBJ,EAAAA,KAAK,EAAET,SAAS,CAACc,MAAV,CAAiBC,UADD;AAEvBC,EAAAA,OAAO,EAAEhB,SAAS,CAACc,MAAV,CAAiBC,UAFH;AAGvBE,EAAAA,WAAW,EAAEjB,SAAS,CAACc,MAAV,CAAiBC,UAHP;AAIvBG,EAAAA,QAAQ,EAAElB,SAAS,CAACmB,IAJG;AAKvBC,EAAAA,cAAc,EAAEpB,SAAS,CAACqB;AALH,CAAzB;AAQA,eAAenB,YAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nimport TextInput from \"./TextInput\";\n\nconst MessageInput = (props) => {\n  // prevent passing type and validator props from this component to the rendered form field component\n  const { type, validator, ...restProps } = props;\n\n  // validateEmail function using the validate() method of the isemail package\n  const validateMessage = (value, label) => {\n    if (!value.length > 2) throw new Error(`${label} is invalid`);\n  };\n  return <Message type=\"text\" validator={validateMessage} {...restProps} />;\n};\n\nconst Message = styled(TextInput)`\n  width: 100%;\n`;\n\nMessageInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  labelId: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  onStateChanged: PropTypes.func,\n};\n\nexport default MessageInput;\n"]},"metadata":{},"sourceType":"module"}